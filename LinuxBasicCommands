1. pwd command
Use the pwd command to find out the path of the current working directory (folder) you’re in.

2. cd command
To navigate through the Linux files and directories, use the cd command.

cd .. (with two dots) to move one directory up
cd to go straight to the home folder
cd- (with a hyphen) to move to your previous directory

3. ls command
The ls command is used to view the contents of a directory. By default, this command will display the contents of your current working directory.

There are variations you can use with the ls command:

ls -R will list all the files in the sub-directories as well
ls -a will show the hidden files
ls -al will list the files and directories with detailed information like the permissions, size, owner, etc.

4. cat command
cat (short for concatenate) is one of the most frequently used commands in Linux. It is used to list the contents of a file on the standard output (sdout).

5. cp command
Use the cp command to copy files from the current directory to a different directory.

6. mv command
The primary use of the mv command is to move files, although it can also be used to rename files.

7. mkdir command
Use mkdir command to make a new directory.

8. rmdir command
If you need to delete a directory, use the rmdir command. However, rmdir only allows you to delete empty directories.

9. rm command
The rm command is used to delete directories and the contents within them. If you only want to delete the directory — as an alternative to rmdir — use rm -r.

10. touch command
The touch command allows you to create a blank new file through the Linux command line.

11. locate command
You can use this command to locate a file, just like the search command in Windows..

12. find command
Similar to the locate command, using find also searches for files and directories. 

13. grep command
Another basic Linux command that is undoubtedly helpful for everyday use is grep. It lets you search through all the text in a given file.

14. sudo command
Short for “SuperUser Do”, this command enables you to perform tasks that require administrative or root permissions.

15. df command
Use df command to get a report on the system’s disk space usage, shown in percentage and KBs.

16. du command
If you want to check how much space a file or a directory takes, the du (Disk Usage) command is the answer. 

17. head command
The head command is used to view the first lines of any text file. By default, it will show the first ten lines.

18. tail command
This one has a similar function to the head command, but instead of showing the first lines, the tail command will display the last ten lines of a text file.

19. diff command
Short for difference, the diff command compares the contents of two files line by line. After analyzing the files, it will output the lines that do not match. 

20. tar command
The tar command is the most used command to archive multiple files into a tarball.

21. chmod command
chmod is another Linux command, used to change the read, write, and execute permissions of files and directories.

22. chown command
In Linux, all files are owned by a specific user. The chown command enables you to change or transfer the ownership of a file to the specified username.

23. jobs command
jobs command will display all current jobs along with their statuses. A job is basically a process that is started by the shell.

24. kill command
If you have an unresponsive program, you can terminate it manually by using the kill command. It will send a certain signal to the misbehaving app and instructs the app to terminate itself.

25. ping command
Use the ping command to check your connectivity status to a server.

26. wget command
The Linux command line is super useful — you can even download files from the internet with the help of the wget command.

27. uname command
The uname command, short for Unix Name, will print detailed information about your Linux system like the machine name, operating system, kernel, and so on.

28. top command
As a terminal equivalent to Task Manager in Windows, the top command will display a list of running processes and how much CPU each process uses. It’s very useful to monitor system resource usage, especially knowing which process needs to be terminated because it consumes too many resources.

29. history command
When you’ve been using Linux for a certain period of time, you’ll quickly notice that you can run hundreds of commands every day. As such, running history command is particularly useful if you want to review the commands you’ve entered before.

30. echo command
This command is used to move some data into a file.

31. zip, unzip command
Use the zip command to compress your files into a zip archive, and use the unzip command to extract the zipped files from a zip archive.

32. hostname command
If you want to know the name of your host/network simply type hostname. Adding a -i to the end will display the IP address of your network.

33. useradd, userdel command
useradd command is used to add user and userdel command is used for delete the user.

Tips and Tricks

Use the clear command to clean out the terminal if it is getting cluttered with too many past commands.

Try the TAB button to autofill what you are typing. For example, if you need to type Documents, begin to type a command (let’s go with cd Docu, then hit the TAB key) and the terminal will fill in the rest, showing you cd Documents.

Ctrl+C and Ctrl+Z are used to stop any command that is currently working. Ctrl+C will stop and terminate the command, while Ctrl+Z will simply pause the command.

If you accidental freeze your terminal by using Ctrl+S, simply undo this with the unfreeze Ctrl+Q.

Ctrl+A moves you to the beginning of the line while Ctrl+E moves you to the end.

You can run multiple commands in one single command by using the “;” to separate them. For example Command1; Command2; Command3. Or use && if you only want the next command to run when the first one is successful.
